<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="odom_topic" value="/visual_slam/odom" />
  <arg name="global_env_pcd2_topic" value="/random_forest/all_map" />
  
  <arg name="simulation" default="true"/>
  <arg name="drone_number" default="1"/>
  
  <arg name="map_size_x" value="18.0"/>
  <arg name="map_size_y" value="55.0"/>
  <arg name="map_size_z" value=" 3.5"/>

  <arg name="init_x" value="0.0"/>
  <arg name="init_y" value="0.0"/>
  <arg name="init_z" value="0.0"/> 

  <arg name="forest" value="1"/> 

  <!-- map generation -->
  <!-- env for front-end compare-->
  <!-- <node pkg="map_generator" name="random_forest" type="random_forest" output="screen" if="$(arg forest)">    
    <remap from="~odometry"   to="$(arg odom_topic)"/>    
    <param name="init_state_x"   value="$(arg init_x)"/>
    <param name="init_state_y"   value="$(arg init_y)"/>
    <param name="map/x_size"     value="$(arg map_size_x)" />
    <param name="map/y_size"     value="$(arg map_size_y)" />
    <param name="map/z_size"     value="$(arg map_size_z)" />
    <param name="map/obs_num"    value="80"/>    
    <param name="map/circle_num"    value="90"/>   
    <param name="map/resolution" value="0.1"/>        
    <param name="ObstacleShape/lower_rad" value="0.4"/>
    <param name="ObstacleShape/upper_rad" value="2.0"/>
    <param name="ObstacleShape/lower_hei" value="5.5"/>
    <param name="ObstacleShape/upper_hei" value="5.5"/>        
    <param name="CircleShape/lower_circle_rad" value="0.6"/>        
    <param name="CircleShape/upper_circle_rad" value="2.0"/>        
    <param name="sensing/rate"   value="1.0"/>        
  </node>
  <include file="$(find mockamap)/launch/mockamap.launch" unless="$(arg forest)"/> -->

  <!--env for w/ w/o compare-->
  <!-- <node pkg="map_generator" type="map_generator_high.py" name="random_forest" output="screen">
    <param name="map/x_size" value="30.0" type="double"/>
    <param name="map/y_size" value="30.0" type="double"/>
    <param name="map/z_size" value="3.5" type="double"/>
    <param name="map/end_blank" value="1.5" type="double"/>
    <param name="resolution" value="0.1" type="double"/>
    <param name="map/random" value="true" type="bool"/>
    
    <param name="gap_num" value="20" type="int" />
    <param name="narrow_gap_width" value="0.75" type="double"/>

    <param name="wall_num" value="2" type="int" />
    <param name="wall_width" value="0.5" type="double" />

    <param name="rand_obs_scale" value="1.5" type="double"/>
    <param name="rand_obs_num" value="0" type="int"/>

  </node> -->

  <!-- the param of wall in front-end benchmark-->
  <!-- <node pkg="map_generator" type="map_generator_high.py" name="random_forest" output="screen">
    <param name="map/x_size" value="16.0" type="double"/>
    <param name="map/y_size" value="70.0" type="double"/>
    <param name="map/z_size" value="3.5" type="double"/>
    <param name="map/end_blank" value="1.5" type="double"/>
    <param name="resolution" value="0.1" type="double"/>
    <param name="map/random" value="true" type="bool"/>
    
    <param name="gap_num" value="6" type="int" />
    <param name="narrow_gap_width" value="0.75" type="double"/>

    <param name="wall_num" value="3" type="int" />
    <param name="wall_width" value="2.5" type="double" />

    <param name="rand_obs_scale" value="1.5" type="double"/>
    <param name="rand_obs_num" value="0" type="int"/>
  </node> -->

  <!-- the param of real-world experiments-->
  <node pkg="map_generator" type="map_generator_high.py" name="random_forest" output="screen">
    <param name="map/x_size" value="10.0" type="double"/>
    <param name="map/y_size" value="20.0" type="double"/>
    <param name="map/z_size" value="2.5" type="double"/>
    <param name="map/end_blank" value="4.5" type="double"/>
    <param name="resolution" value="0.1" type="double"/>
    <param name="map/random" value="true" type="bool"/>
    
    <param name="gap_num" value="2" type="int" />
    <param name="narrow_gap_width" value="0.8" type="double"/>

    <param name="wall_num" value="2" type="int" />
    <param name="wall_width" value="0.6" type="double" />

    <param name="rand_obs_scale" value="1.5" type="double"/>
    <param name="rand_obs_num" value="0" type="int"/>
  </node>
  <!-- <node pkg="map_generator" name="random_forest" type="random_forest" output="screen">    
    <remap from="~odometry"   to="$(arg odom_topic)"/>    
    <param name="init_state_x"   value="$(arg init_x)"/>
    <param name="init_state_y"   value="$(arg init_y)"/>
    <param name="map/x_size"     value="5.0" />
    <param name="map/y_size"     value="11.0" />
    <param name="map/z_size"     value="2.5" />
    <param name="map/obs_num"    value="20"/>    
    <param name="map/circle_num"    value="4"/>   
    <param name="map/resolution" value="0.1"/>        
    <param name="ObstacleShape/lower_rad" value="0.6"/>
    <param name="ObstacleShape/upper_rad" value="1.0"/>
    <param name="ObstacleShape/lower_hei" value="1.5"/>
    <param name="ObstacleShape/upper_hei" value="2.0"/>        
    <param name="CircleShape/lower_circle_rad" value="0.4"/>        
    <param name="CircleShape/upper_circle_rad" value="0.6"/>        
    <param name="sensing/rate"   value="1.0"/>        
  </node> -->
	
  <node pkg="so3_quadrotor_simulator" type="quadrotor_simulator_so3" name="quadrotor_simulator_so3" output="screen">
        <param name="rate/odom" value="200.0"/>
        <param name="simulator/init_state_x" value="$(arg init_x)"/>
        <param name="simulator/init_state_y" value="$(arg init_y)"/>
        <param name="simulator/init_state_z" value="$(arg init_z)"/>

        <remap from="~odom" to="/visual_slam/odom"/>
        <remap from="~cmd" to="so3_cmd"/>
        <remap from="~force_disturbance" to="force_disturbance"/>    
        <remap from="~moment_disturbance" to="moment_disturbance"/>        
  </node>
	
  <node pkg="nodelet" type="nodelet" args="standalone so3_control/SO3ControlNodelet" name="so3_control" required="true" output="screen">
        <remap from="~odom" to="/visual_slam/odom"/>
        <remap from="~position_cmd" to="/planning/pos_cmd"/>
        <remap from="~motors" to="motors"/>
        <remap from="~corrections" to="corrections"/>
        <remap from="~so3_cmd" to="so3_cmd"/>
        <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
        <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
        <param name="mass" value="0.98"/>
        <param name="use_angle_corrections " value="false"/>
        <param name="use_external_yaw "      value="false"/>
        <param name="gains/rot/z" value="1.0"/>    
        <param name="gains/ang/z" value="0.1"/>        
  </node>
 
  <!-- <node pkg="so3_disturbance_generator" name="so3_disturbance_generator" type="so3_disturbance_generator" output="screen">
        <remap from="~odom" to="/visual_slam/odom"/>             
        <remap from="~noisy_odom" to="/state_ukf/odom"/>          
        <remap from="~correction" to="/visual_slam/correction"/>   
        <remap from="~force_disturbance" to="force_disturbance"/>        
        <remap from="~moment_disturbance" to="moment_disturbance"/>            
  </node>  -->
 
  <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
        <remap from="~odom" to="/visual_slam/odom"/>
        <param name="color/a" value="1.0"/>    
        <param name="color/r" value="0.1176"/>        
        <param name="color/g" value="0.5647"/>        
        <param name="color/b" value="1.0"/>       
        <param name="covariance_scale" value="100.0"/>       
        <param name="robot_scale" value="1.0"/>
  </node>
  
  <!-- <node pkg="depth_sensor_simulator" type="pcl_render_node" name="pcl_render_node" output="screen">
    <rosparam command="load" file="$(find depth_sensor_simulator)/params/camera.yaml" />

    <param name="sensing_horizon"  value="5.0" />
    <param name="sensing_rate"     value="30.0"/>
    <param name="estimation_rate"  value="30.0"/>
    <param name="map/x_size"     value="$(arg map_size_x)"/>
    <param name="map/y_size"     value="$(arg map_size_y)"/>
    <param name="map/z_size"     value="$(arg map_size_z)"/>

    <remap from="~global_map" to="$(arg global_env_pcd2_topic)"/>
    <remap from="~odometry"   to="$(arg odom_topic)"/>
  </node> -->
  

</launch>